@page "/"
@rendermode InteractiveServer
@using BlazorBootstrap;
@using DeBron.PowerPoint.Builder.Models

<PageTitle>debron Presentatie Generator</PageTitle>

<h1>debron Presentatie Generator</h1>

Voeg hieronder nummers toe.

<table class="table">
    <thead>
    <tr>
        <th>Naam</th>
        <th>Artiest</th>
        <td />
    </tr>
    </thead>
    <tbody>
    @foreach (var song in @_songs)
    {
        <tr>
            <td>@song.Name</td>
            <td>@song.Artist</td>
            <td>
                <div class="d-flex flex-row justify-content-end gap-1">
                    <Button Color="ButtonColor.Light" TooltipTitle="Pas aan" @onclick="() => EditSong(song)"><Icon Name="IconName.Pen"></Icon></Button>
                    <Button Color="ButtonColor.Light" TooltipTitle="Verwijder" @onclick="() => _songs.Remove(song)"><Icon Name="IconName.Trash"></Icon></Button>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>
<div class="flex-column gap-1">
    <Button Color="ButtonColor.Secondary" @onclick="AddSong">Voeg nummer toe</Button>
    <Button Color="ButtonColor.Primary" @onclick="Build">Genereer presentatie</Button>
</div>

<form @onsubmit="OnSubmit">
    <Dialog Title="Voeg nummer toe" OkButtonType="ButtonType.Submit" Opened="_addSongDialogOpen" CloseButtonClicked="@(() => _addSongDialogOpen = false)" OkText="@(_songs.Any(s => s.Id == Song?.Id) ? "Voeg toe" : "Sla op")">
        <div class="flex-column flex-grow-1 gap-1">
            <label class="flex-column">
                Naam
                <InputText @bind-Value="Song.Name"></InputText>
            </label>
            <label class="flex-column">
                Artiest
                <InputText @bind-Value="Song.Artist"></InputText>
            </label>
            <label class="flex-column flex-grow-1">
                Songtekst
                <InputTextArea @bind-Value="Song.Lyrics" class="flex-grow-1"></InputTextArea>
            </label>
        </div>
    </Dialog>
</form>

@code {
    private readonly List<Song> _songs = [new()
    {
        Id = Guid.NewGuid(),
        Name = "Ik ben een nummer",
        Artist = "DeBron",
        Lyrics = "Eerste regel,\nTweede regel,\n\nDerde regel"
    }];
    private bool _addSongDialogOpen = false;
    
    [SupplyParameterFromForm]
    private Song? Song { get; set; }

    protected override void OnInitialized() => Song ??= new();
    
    private void AddSong()
    {
        _addSongDialogOpen = true;
    }
    
    private void EditSong(Song song)
    {
        Song = song;
        _addSongDialogOpen = true;
    }
    
    private void OnSubmit()
    {
        if (Song is null)
            return;
        
        if (_songs.Any(s => s.Id == Song.Id))
        {
            var existingSong = _songs.First(s => s.Id == Song.Id);
            existingSong.Name = Song.Name;
            existingSong.Artist = Song.Artist;
            existingSong.Lyrics = Song.Lyrics;
        }
        else
        {
            Song.Id = Guid.NewGuid();
            _songs.Add(Song);
        }
        
        Song = null;
        _addSongDialogOpen = false;
    }

    private void Build()
    {
        PresentationBuilder.Build(_songs);
    }
}